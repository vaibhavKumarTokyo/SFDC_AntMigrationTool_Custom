<project name="Sample usage of Salesforce Ant tasks" default="test" basedir="." xmlns:sf="antlib:com.salesforce">

    <property file="build.properties"/>
    <property environment="env"/>

    <!-- Setting default value for username, password and session id properties to empty string
         so unset values are treated as empty. Without this, ant expressions such as ${sf.username}
         will be treated literally.
    -->
    <condition property="target.sf.username" value=""> <not> <isset property="target.sf.username"/> </not> </condition>
    <condition property="target.sf.password" value=""> <not> <isset property="target.sf.password"/> </not> </condition>
    <condition property="target.sf.sessionId" value=""> <not> <isset property="target.sf.sessionId"/> </not> </condition>

    <condition property="source.sf.username" value=""> <not> <isset property="source.sf.username"/> </not> </condition>
    <condition property="source.sf.password" value=""> <not> <isset property="source.sf.password"/> </not> </condition>
    <condition property="source.sf.sessionId" value=""> <not> <isset property="source.sf.sessionId"/> </not> </condition>

    <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
        <classpath>
            <pathelement location="../ant-salesforce.jar" />
        </classpath>
    </taskdef>

    <!--Retrieves from source and Deploys to target-->
    <target name="retrieveAndDeploy">
      <mkdir dir="retrieveUnpackaged"/>
      <!-- Retrieve the contents into another directory -->
      <sf:retrieve username="${source.sf.username}" password="${source.sf.password}" sessionId="${source.sf.sessionId}" serverurl="${source.sf.serverurl}" maxPoll="${source.sf.maxPoll}" retrieveTarget="retrieveUnpackaged" unpackaged="unpackaged/package.xml"/>
      <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" deployRoot="retrieveUnpackaged" rollbackOnError="true"/>
    </target>

    <!-- Test out deploy and retrieve verbs for package 'mypkg' -->
    <target name="test">
      <!-- Upload the contents of the "mypkg" package -->
      <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" deployRoot="mypkg" rollbackOnError="true"/>
      <mkdir dir="retrieveOutput"/>
      <!-- Retrieve the contents into another directory -->
      <sf:retrieve username="${source.sf.username}" password="${source.sf.password}" sessionId="${source.sf.sessionId}" serverurl="${source.sf.serverurl}" maxPoll="${source.sf.maxPoll}" retrieveTarget="retrieveOutput" packageNames="MyPkg"/>
    </target>

    <!-- Retrieve an unpackaged set of metadata from your org -->
    <!-- The file unpackaged/package.xml lists what is to be retrieved -->
    <target name="retrieveUnpackaged">
      <mkdir dir="retrieveUnpackaged"/>
      <!-- Retrieve the contents into another directory -->
      <sf:retrieve username="${source.sf.username}" password="${source.sf.password}" sessionId="${source.sf.sessionId}" serverurl="${source.sf.serverurl}" maxPoll="${source.sf.maxPoll}" retrieveTarget="retrieveUnpackaged" unpackaged="unpackaged/package.xml"/>
    </target>

    <!-- Retrieve all the items of a particular metadata type -->
    <target name="bulkRetrieve">
      <sf:bulkRetrieve username="${source.sf.username}" password="${source.sf.password}" sessionId="${source.sf.sessionId}" serverurl="${source.sf.serverurl}" maxPoll="${source.sf.maxPoll}" metadataType="${source.sf.metadataType}" retrieveTarget="retrieveUnpackaged"/>
    </target>

    <!-- Retrieve metadata for all the packages specified under packageNames -->
    <target name="retrievePkg">
      <sf:retrieve username="${source.sf.username}" password="${source.sf.password}" sessionId="${source.sf.sessionId}" serverurl="${source.sf.serverurl}" maxPoll="${source.sf.maxPoll}" retrieveTarget="retrieveOutput" packageNames="${source.sf.pkgName}"/>
    </target>

    <!-- Deploy the unpackaged set of metadata retrieved with retrieveUnpackaged and run tests in this organization's namespace only-->
    <target name="deployUnpackaged">
      <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" deployRoot="retrieveUnpackaged" rollbackOnError="true"/>
    </target>

    <!-- Deploy a zip of metadata files to the org -->
    <target name="deployZip">
      <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" zipFile="${target.sf.zipFile}" pollWaitMillis="1000" rollbackOnError="true"/>
    </target>

    <!-- Shows deploying code & running tests for code in directory -->
    <target name="deployCode">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" deployRoot="codepkg" testLevel="RunSpecifiedTests" rollbackOnError="true">
      	 <runTest>SampleDeployClass</runTest>
      </sf:deploy>
    </target>

	 <!-- Shows deploying code with no TestLevel sepcified -->
    <target name="deployCodeNoTestLevelSpecified">
      <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" deployRoot="codepkg" rollbackOnError="true"/>
    </target>

	<!-- Shows deploying code and running tests only within the org namespace -->
	<target name="deployCodeRunLocalTests">
	  <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" deployRoot="codepkg" rollbackOnError="true"  testlevel="RunLocalTests"/>
	</target>

    <!-- Shows removing code; only succeeds if done after deployCode -->
    <target name="undeployCode">
      <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" deployRoot="removecodepkg"/>
    </target>

    <!-- Shows retrieving code; only succeeds if done after deployCode -->
    <target name="retrieveCode">
      <!-- Retrieve the contents listed in the file codepkg/package.xml into the codepkg directory -->
      <sf:retrieve username="${source.sf.username}" password="${source.sf.password}" sessionId="${source.sf.sessionId}" serverurl="${source.sf.serverurl}" maxPoll="${source.sf.maxPoll}" retrieveTarget="codepkg" unpackaged="codepkg/package.xml"/>
    </target>

    <!-- Shows deploying code, running all tests, and running tests (1 of which fails), and logging. -->
    <target name="deployCodeFailingTest">
      <!-- Upload the contents of the "codepkg" package, running all tests -->
      <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" deployRoot="codepkg" testLevel="RunAllTestsInOrg" rollbackOnError="true" logType="Debugonly"/>
    </target>

    <!-- Shows check only; never actually saves to the server -->
    <target name="deployCodeCheckOnly">
      <sf:deploy username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" deployRoot="codepkg" checkOnly="true"/>
    </target>

	<!-- Shows quick deployment of recent validation. Set the property sf.recentValidationId to your recent check only deployment Id -->
	<target name="quickDeploy">
	  <sf:deployRecentValidation  username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" recentValidationId="${target.sf.recentValidationId}"/>
	</target>

	<!-- Shows cancel deployment of deploy request either pending or in progress. Set property sf.requestId to Id of pending or in progress deploy request -->
	<target name="cancelDeploy">
	  <sf:cancelDeploy  username="${target.sf.username}" password="${target.sf.password}" sessionId="${target.sf.sessionId}" serverurl="${target.sf.serverurl}" maxPoll="${target.sf.maxPoll}" requestId="${target.sf.requestId}"/>
	</target>

	<!-- Retrieve the information of all items of a particular metadata type -->
    <target name="listMetadata">
      <sf:listMetadata username="${source.sf.username}" password="${source.sf.password}" sessionId="${source.sf.sessionId}" serverurl="${source.sf.serverurl}" metadataType="${source.sf.metadataType}"/>
    </target>

	<!-- Retrieve the information on all supported metadata type -->
    <target name="describeMetadata">
      <sf:describeMetadata username="${source.sf.username}" password="${source.sf.password}" sessionId="${source.sf.sessionId}" serverurl="${source.sf.serverurl}"/>
    </target>
</project>
